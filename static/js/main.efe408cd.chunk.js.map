{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","Reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","deleteContact","newContacts","Fragment","contacts_Contact","deleteClickHandler","Header","branding","href","defaultProps","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","About","NotFound","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.efe408cd.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst Reducer = (state, action) => {\n   switch(action.type) {\n      case 'DELETE_CONTACT':\n         return {\n            ...state,\n            contacts: state.contacts.filter(\n               contact => contact.id != action.payload\n            )\n         };\n         case 'ADD_CONTACT':\n         return {\n            ...state,\n            contacts: [action.payload, ...state.contacts]\n\n         };\n         case 'UPDATE_CONTACT':\n         return {\n            ...state,\n            contacts: state.contacts.map(\n               contact =>\n                  contact.id === action.payload.id\n                     ? (contact = action.payload)\n                     : contact\n            )\n         };\n      default:\n         return state;\n   }\n}\n\nexport class Provider extends Component {\n   state = {\n      contacts: [],\n      dispatch: action => this.setState(state => Reducer(state, action))\n   };\n\n   async componentDidMount(){\n      const res = await axios.\n         get(\"https://jsonplaceholder.typicode.com/users\")\n\n         this.setState({contacts: res.data});\n\n   }\n\n   render() {\n      return(\n         <Context.Provider value={this.state}>\n            {this.props.children}\n         </Context.Provider>\n      )\n   }\n}\n\nexport const Consumer = Context.Consumer;\n\n","import React, { Component }  from 'react';\nimport PropTypes from 'prop-types';\nimport { Consumer } from '../../context';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass Contact extends Component {\n   state = {\n      showContactInfo: false\n   };\n\n   onDeleteClick = async (id, dispatch) => {\n      try{\n         await axios\n         .delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n          dispatch({type: 'DELETE_CONTACT', payload: id});\n      } catch(e){\n         dispatch({type: 'DELETE_CONTACT', payload: id});\n      }\n   };\n\n   render() {\n      const {id, name, email, phone} = this.props.contact;\n      const {showContactInfo} = this.state;\n      return(\n\n         <Consumer>\n            {value => {\n               const { dispatch } = value;\n               return (\n                   <div className=\"card card-body mb-3\">\n                     <h4>{name}\n                        <i onClick={() => this.setState({showContactInfo: !this.state.showContactInfo})}\n                           className=\"fas fa-sort-down\"\n                           style={{cursor: \"pointer\"}}\n                        />\n                        <i className=\"fas fa-times\"\n                           style={{cursor: 'pointer', float: 'right', color: 'red'}}\n                           onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                        ></i>\n\n                        <Link to={`contact/edit/${id}`} >\n                           <i className=\"fas fa-pencil-alt\"\n                              style={{cursor: 'pointer', float: 'right', color: 'black', marginRight: '1rem'}}\n                           ></i>\n                        </Link>\n\n\n                     </h4>\n                     {showContactInfo ? ( <ul className=\"list-group\">\n                        <li className=\"list-group-item\">Email: {email}</li>\n                        <li className=\"list-group-item\">Phone: {phone}</li>\n                     </ul>) : null}\n\n                  </div>\n               )\n            }}\n         </Consumer>\n      )\n   }\n}\n\n\nContact.propTypes = {\n   contact: PropTypes.object.isRequired\n};\n\n\nexport default Contact;","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from '../../context';\n\nclass Contacts extends Component {\n\n   deleteContact = (id) => {\n      const {contacts} = this.state;\n      const newContacts = contacts.filter(contact => contact.id != id);\n      this.setState({\n         contacts: newContacts\n      })\n   }\n\n   render() {\n      return (\n         <Consumer>\n            {value => {\n               const {contacts} = value;\n               return(\n                  <React.Fragment>\n                  <h1 className=\"display-4 mb-2\"><span className=\"text-danger\">Contact</span> List</h1>\n                     {contacts.map(contact => (\n                        <Contact\n                           key={contact.id}\n                           contact={contact}\n                           deleteClickHandler={this.deleteContact.bind(this, contact.id)}\n                        />\n                     ))}\n                  </React.Fragment>\n               )\n            }}\n         </Consumer>\n      )\n   }\n}\n\nexport default Contacts;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\n\n\nconst Header = (props) => {\n   const {branding} = props;\n   return (\n     <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n         <a href=\"/\" className=\"navbar-brand\">{branding}</a>\n         <div>\n            <ul className=\"navbar-nav mr-auto\">\n               <li className=\"nav-item\">\n                  <Link to=\"/\" className=\"nav-link\"><i className=\"fas fa-home\"></i>Home</Link>\n               </li>\n\n               <li className=\"nav-item\">\n                  <Link to=\"/contact/add\" className=\"nav-link\"><i className=\"fas fa-plus\"></i>Add</Link>\n               </li>\n\n               <li className=\"nav-item\">\n                  <Link to=\"/about\" className=\"nav-link\"><i className=\"fas fa-question\"></i>About</Link>\n               </li>\n            </ul>\n         </div>\n      </div>\n     </nav>\n   );\n};\n\nHeader.defaultProps = {\n   branding: \"My App\"\n};\n\nHeader.propTypes = {\n   branding: PropTypes.string.isRequired\n}\n\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n   label,\n   name,\n   value,\n   placeholder,\n   type,\n   onChange,\n   error\n}) => {\n   return(\n      <div className=\"form-group\">\n         <label htmlFor={name}>{label}</label>\n         <input\n            type={type}\n            name={name}\n            className={classnames('form-control form-control-lg', {\n               'is-invalid': error\n            })}\n            placeholder={placeholder}\n            value={value}\n            onChange={onChange}\n            />\n            {error && <div className=\"invalid-feedlback\">{error}</div>}\n\n      </div>\n   );\n};\n\nTextInputGroup.propTypes = {\n   label: PropTypes.string.isRequired,\n   name: PropTypes.string.isRequired,\n   placeholder: PropTypes.string.isRequired,\n   value: PropTypes.string.isRequired,\n   type: PropTypes.string.isRequired,\n   onChange: PropTypes.func.isRequired,\n   error: PropTypes.string\n}\n\nTextInputGroup.defaultProps = {\n   type: 'text'\n}\n\nexport default TextInputGroup;","import React, { Component } from 'react';\nimport {Consumer} from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass AddContact extends Component{\n\n   state = {\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n   };\n\n   onChange = e => this.setState({[e.target.name]: e.target.value});\n\n   onSubmit = async (dispatch, e) => {\n      e.preventDefault();\n      const { name, email, phone } = this.state;\n      if(name===\"\"){\n         this.setState({errors: {name: \"Name is required\"}})\n         return;\n      }\n\n      if(email===\"\"){\n         this.setState({errors: {email: \"Email is required\"}})\n         return;\n      }\n\n      if(phone===\"\"){\n         this.setState({errors: {phone: \"Phone is required\"}})\n         return;\n      }\n\n\n      const newContact = {\n         name,\n         email,\n         phone\n      }\n      const res = await axios\n      .post('https://jsonplaceholder.typicode.com/users', newContact);\n\n      dispatch({type: 'ADD_CONTACT', payload: res.data});\n\n      this.setState({\n         name: '',\n         email: '',\n         phone: '',\n         errors: {}\n      });\n\n      this.props.history.push('/');\n   };\n\n   render() {\n      const { name, email, phone, errors } = this.state;\n\n      return (\n         <Consumer>\n            {value => {\n               const {dispatch} = value;\n               return(\n                  <div className=\"card mb-3\">\n                     <div className=\"card-header\">Add Contact</div>\n                     <div className=\"card-body\">\n                        <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                           <TextInputGroup\n                              label=\"Name\"\n                              name=\"name\"\n                              placeholder=\"Enter Name...\"\n                              value={name}\n                              onChange={this.onChange}\n                              error={errors.name}\n                           />\n                           <TextInputGroup\n                              label=\"Email\"\n                              name=\"email\"\n                              type=\"email\"\n                              placeholder=\"Enter Email...\"\n                              value={email}\n                              onChange={this.onChange}\n                              error={errors.email}\n                           />\n                           <TextInputGroup\n                              label=\"Phone\"\n                              name=\"phone\"\n                              placeholder=\"Enter Phone...\"\n                              value={phone}\n                              onChange={this.onChange}\n                              error={errors.phone}\n                           />\n                           <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\" />\n                        </form>\n                     </div>\n                  </div>\n               )\n            }}\n         </Consumer>\n      )\n   }\n}\n\nexport default AddContact;","import React, { Component } from 'react';\nimport {Consumer} from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass EditContact extends Component{\n\n   state = {\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n   };\n\n   async componentDidMount() {\n      const { id } = this.props.match.params;\n      const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n      const contact = res.data;\n      this.setState({\n         name: contact.name,\n         email: contact.email,\n         phone: contact.phone\n      });\n   }\n\n   onChange = e => this.setState({[e.target.name]: e.target.value});\n\n   onSubmit = async (dispatch, e) => {\n      e.preventDefault();\n      const { name, email, phone } = this.state;\n      if(name===\"\"){\n         this.setState({errors: {name: \"Name is required\"}})\n         return;\n      }\n\n      if(email===\"\"){\n         this.setState({errors: {email: \"Email is required\"}})\n         return;\n      }\n\n      if(phone===\"\"){\n         this.setState({errors: {phone: \"Phone is required\"}})\n         return;\n      }\n\n      const updContact = {\n         name,\n         email,\n         phone\n      };\n\n      const { id } = this.props.match.params;\n\n      const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\n\n      dispatch({type: 'UPDATE_CONTACT', payload: res.data});\n\n      this.setState({\n         name: '',\n         email: '',\n         phone: '',\n         errors: {}\n      });\n\n      this.props.history.push('/');\n   };\n\n   render() {\n      const { name, email, phone, errors } = this.state;\n\n      return (\n         <Consumer>\n            {value => {\n               const {dispatch} = value;\n               return(\n                  <div className=\"card mb-3\">\n                     <div className=\"card-header\">Edit Contact</div>\n                     <div className=\"card-body\">\n                        <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                           <TextInputGroup\n                              label=\"Name\"\n                              name=\"name\"\n                              placeholder=\"Enter Name...\"\n                              value={name}\n                              onChange={this.onChange}\n                              error={errors.name}\n                           />\n                           <TextInputGroup\n                              label=\"Email\"\n                              name=\"email\"\n                              type=\"email\"\n                              placeholder=\"Enter Email...\"\n                              value={email}\n                              onChange={this.onChange}\n                              error={errors.email}\n                           />\n                           <TextInputGroup\n                              label=\"Phone\"\n                              name=\"phone\"\n                              placeholder=\"Enter Phone...\"\n                              value={phone}\n                              onChange={this.onChange}\n                              error={errors.phone}\n                           />\n                           <input type=\"submit\" value=\"Edit Contact\" className=\"btn btn-light btn-block\" />\n                        </form>\n                     </div>\n                  </div>\n               )\n            }}\n         </Consumer>\n      )\n   }\n}\n\nexport default EditContact;","import React from 'react';\n\nexport default () => {\n   return (\n      <div>\n         <h1 className=\"display-4\">About Contact Manager</h1>\n         <p className=\"lead\">Simple App to manage contacts</p>\n         <p className=\"text-secondary\">Version 1.0.0</p>\n      </div>\n   )\n}","import React from 'react';\n\nexport default () => {\n   return(\n      <div>\n         <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\n         <p className=\"lead\">Sorry, that page does not exist</p>\n      </div>\n   )\n}","import React, { Component } from 'react';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom'\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from './context';\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manger\"/>\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}